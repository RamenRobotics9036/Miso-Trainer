/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    id "checkstyle"
    id 'java-library'
    id "edu.wpi.first.GradleRIO" version "2024.3.1"
}

apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '10.12.0'  // specify the version of checkstyle
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")  // specify the path to your checkstyle config file
    sourceSets = [sourceSets.main]  // specify the source sets to be checked, in this case, it's the main source set
    showViolations = true  // whether to show the violations in the console
}

sourceCompatibility = JavaVersion.VERSION_17

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation "org.mockito:mockito-core:3.+"
}

// Configure jar and deploy tasks
// $TODO Is this needed? wpi.java.configureExecutableTasks(jar)
// $TODO Is the following line needed?
wpi.java.configureTestTasks(test)

// Configure string concat to always inline compile
tasks.withType(JavaCompile) {
    options.compilerArgs.add '-XDstringConcat=inline'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
}
